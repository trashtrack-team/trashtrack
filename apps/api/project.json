{
    "name": "api",
    "$schema": "../../node_modules/nx/schemas/project-schema.json",
    "sourceRoot": "apps/api/src",
    "projectType": "application",
    "targets": {
        "build": {
            "executor": "@nx/webpack:webpack",
            "outputs": ["{options.outputPath}"],
            "defaultConfiguration": "production",
            "dependsOn": ["common:build",  "api:prisma-generate"],
            "options": {
                "target": "node",
                "compiler": "tsc",
                "outputPath": "dist/apps/api",
                "main": "apps/api/src/main.ts",
                "tsConfig": "apps/api/tsconfig.app.json",
                "asset": ["apps/api/src/asset"],
                "webpackConfig": "apps/api/webpack.config.js"
            },
            "configurations": {
                "development": {},
                "production": {}
            }
        },
        "serve": {
            "executor": "@nx/js:node",
            "defaultConfiguration": "development",
            "options": {
                "buildTarget": "api:build",
                "inspect": false
            },
            "configurations": {
                "development": {
                    "buildTarget": "api:build:development",
                    "inspect": false
                },
                "production": {
                    "buildTarget": "api:build:production",
                    "inspect": false
                }
            }
        },
        "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": ["{options.outputFile}"]
        },
        "prisma-generate": {
            "executor": "@nx-tools/nx-prisma:generate",
            "options": {
                "schema": "apps/api/prisma/schema.prisma"
            }
        },
        "prisma-migrate": {
            "executor": "@nx-tools/nx-prisma:migrate",
            "options": {
                "schema": "apps/api/prisma/schema.prisma"
            }
        },
        "prisma-pull": {
            "executor": "@nx-tools/nx-prisma:pull",
            "options": {
                "schema": "apps/api/prisma/schema.prisma"
            }
        },
        "prisma-push": {
            "executor": "@nx-tools/nx-prisma:push",
            "options": {
                "schema": "apps/api/prisma/schema.prisma"
            }
        },
        "prisma-deploy": {
            "executor": "@nx-tools/nx-prisma:deploy",
            "options": {
                "schema": "apps/api/prisma/schema.prisma"
            }
        },
        "prisma-status": {
            "executor": "@nx-tools/nx-prisma:status",
            "options": {
                "schema": "apps/api/prisma/schema.prisma"
            }
        },
        "prisma-studio": {
            "executor": "@nx-tools/nx-prisma:studio",
            "options": {
                "schema": "apps/api/prisma/schema.prisma"
            }
        },
        "prisma-reset": {
            "executor": "@nx-tools/nx-prisma:reset",
            "options": {
                "schema": "apps/api/prisma/schema.prisma"
            }
        },
        "prisma-resolve": {
            "executor": "@nx-tools/nx-prisma:resolve",
            "options": {
                "schema": "apps/api/prisma/schema.prisma"
            }
        },
        "prisma-seed": {
            "executor": "@nx-tools/nx-prisma:seed",
            "options": {
                "schema": "apps/api/prisma/schema.prisma",
                "script": "apps/api/prisma/seed.ts",
                "tsConfig": "apps/api/tsconfig.app.json"
            }
        },
        "prisma-validate": {
            "executor": "@nx-tools/nx-prisma:validate",
            "options": {
                "schema": "appdocker-compose up -ds/api/prisma/schema.prisma"
            }
        },
        "docker-compose-up": {
            "executor": "nx:run-commands",
            "options": {
                "commands": ["docker-compose -f apps/api/docker-compose.yml up -d"]
            }
        },
        "docker-compose-down": {
            "executor": "nx:run-commands",
            "options": {
                "commands": ["docker-compose -f apps/api/docker-compose.yml down"]
            }
        }
    },
    "tags": []
}
